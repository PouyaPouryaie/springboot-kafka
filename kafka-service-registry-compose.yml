services:
  kafka_b:
    container_name: kafka_b
    hostname: kafka_b
    image: bitnami/kafka:3.8.1
    ports:
      - '9092:9092'
      - '9094:9094'
    volumes:
      - kafka_storage:/bitnami/kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes # use KRAFT instead of zookeeper for Quorum_lead
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,EXTERNAL://kafka_b:9094
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true # Creating topic if the topic does not exist
    networks:
      - kafka-network
  
  kafka-ui:
    container_name: kafka-ui
    hostname: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.2
    depends_on: 
      - kafka_b
    ports:
      - '8080:8080'
    volumes:
      - kafka_ui_storage:/etc/kafkaui
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      LOGGING_LEVEL_ROOT: 'DEBUG'
    networks:
      - kafka-network
  
  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    depends_on:
      - kafka_b
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka_b:9094,PLAINTEXT_INTERNAL://localhost:29092
    networks:
      - kafka-network

volumes:
  kafka_storage:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '${PWD}/docker-volume'
  kafka_ui_storage:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '${PWD}/kafka-ui-volume'


networks:
  kafka-network:
    name: kafka-network
    driver: bridge